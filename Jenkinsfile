pipeline {
    agent any
    
    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/romo0208/mydataapp.git', branch: 'master'
            }
        }

        stage('Copy Files to Directory') {
            steps {
                sh '''
                    # –°–æ–∑–¥–∞–µ–º —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
                    mkdir -p /mnt/c/dev/a_data
                    # –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ workspace —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
                    cp -R ./* /mnt/c/dev/a_data/
                    # –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º rsync –¥–ª—è –±–æ–ª–µ–µ –≥–∏–±–∫–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
                    # rsync -av --delete ./ /mnt/c/dev/a_data/
                '''
            }
        }        
        
        stage('Start Minikube') {
            steps {
                script {
                    echo "üöÄ –ó–∞–ø—É—Å–∫ Minikube —Å –¥—Ä–∞–π–≤–µ—Ä–æ–º Docker..."
                    // --force –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞, –µ—Å–ª–∏ –∫–ª–∞—Å—Ç–µ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç :cite[1]
                    sh 'nohup minikube start --driver=docker --force > /tmp/minikube.log 2>&1 &'
                    echo "‚úÖ Minikube —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω. –õ–æ–≥–∏ –≤ /tmp/minikube.log"
                    sleep time: 15, unit: 'SECONDS'
                    sh 'cat /tmp/minikube.log'
                }
            }
        }
        
        stage('Build Frontend Image') {
            steps {
                script {
                    echo "üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
                    dir('/mnt/c/dev/a_data/frontend-app') {
                        // –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ –≤–Ω—É—Ç—Ä–∏ Minikube environment :cite[1]
                        sh 'minikube image build -t frontend-app_frontend:latest .'
                    }
                    echo "‚úÖ –û–±—Ä–∞–∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω."
                }
            }
        }
        
        stage('Build Backend Image') {
            steps {
                script {
                    echo "üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ –±—ç–∫–µ–Ω–¥–∞..."
                    dir('/mnt/c/dev/a_data/postgres-java-app') {
                        // --overwrite=true –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–∑ :cite[1]
                        sh 'minikube image build -t postgres-java-app_app:latest .'
                    }
                    echo "‚úÖ –û–±—Ä–∞–∑ –±—ç–∫–µ–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω."
                }
            }
        }
        
        stage('Load Frontend Image to Minikube') {
            steps {
                script {
                    echo "üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ Minikube..."
                    sh 'minikube image load frontend-app_frontend:latest --overwrite=true'
                    echo "‚úÖ –û–±—Ä–∞–∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Minikube."
                }
            }
        }
        
        stage('Load Backend Image to Minikube') {
            steps {
                script {
                    echo "üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–∞ –±—ç–∫–µ–Ω–¥–∞ –≤ Minikube..."
                    // --overwrite=true –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–º–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ–±—Ä–∞–∑–∞ :cite[1]
                    sh 'minikube image load postgres-java-app_app:latest --overwrite=true'
                    echo "‚úÖ –û–±—Ä–∞–∑ –±—ç–∫–µ–Ω–¥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Minikube."
                }
            }
        }
        
        stage('Apply Kubernetes Manifests') {
            steps {
                script {
                    echo "üöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ Kubernetes –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤..."
                    dir('/mnt/c/dev/a_data/k8s') {
                        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–º–µ–Ω—è–µ–º namespace, —Ç–∞–∫ –∫–∞–∫ –æ—Ç –Ω–µ–≥–æ –∑–∞–≤–∏—Å—è—Ç –¥—Ä—É–≥–∏–µ —Ä–µ—Å—É—Ä—Å—ã
                        sh 'kubectl apply -f mydataapp-namespace.yaml'
                        
                        // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ YAML-—Ñ–∞–π–ª—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ, –∫—Ä–æ–º–µ namespace
                        def files = findFiles(glob: '*.yaml')
                        files.each { file ->
                            if (file.name != 'mydataapp-namespace.yaml') {
                                sh "kubectl apply -f ${file.name}"
                            }
                        }
                    }
                    echo "‚úÖ –í—Å–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã."
                }
            }
        }
        
//        stage('Start Minikube Tunnel') {
//            steps {
//                script {
//                    echo "üîó –ó–∞–ø—É—Å–∫ Minikube tunnel –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–∏—Å–∞–º..."
//                    // –ó–∞–ø—É—Å–∫ tunnel –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ :cite[5]
//                    sh 'nohup minikube tunnel > /tmp/minikube-tunnel.log 2>&1 &'
//                    echo "‚úÖ Minikube tunnel –∑–∞–ø—É—â–µ–Ω. –õ–æ–≥–∏ –≤ /tmp/minikube-tunnel.log"
//                    
//                    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ tunnel
//                    sleep time: 10, unit: 'SECONDS'
//                    sh 'cat /tmp/minikube-tunnel.log'
//                    sleep time: 900, unit: 'SECONDS'
//                }
//            }
//        }

        stage('Start Minikube dashboard') {
            steps {
                script {
                    echo "üîó –ó–∞–ø—É—Å–∫ Minikube dashboard –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–∏—Å–∞–º..."
                    // –ó–∞–ø—É—Å–∫ tunnel –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
                    sh 'nohup minikube dashboard > /tmp/minikube-dashboard.log 2>&1 &'
                    echo "‚úÖ Minikube dashboard –∑–∞–ø—É—â–µ–Ω. –õ–æ–≥–∏ –≤ /tmp/minikube-dashboard.log:"                    
                    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ dashboard
                    sleep time: 15, unit: 'SECONDS'
                    sh 'cat /tmp/minikube-dashboard.log'
                }
            }
        }    
       
    }
    
    post {
        always {
            echo "üìù Pipeline –∑–∞–≤–µ—Ä—à–µ–Ω. –î–µ—Ç–∞–ª–∏ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ –ª–æ–≥–∞—Ö –≤—ã—à–µ."
        }
        success {
            echo "üéâ –í—Å–µ —Å—Ç–∞–¥–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ Slack –∏–ª–∏ email
        }
        failure {
            echo "‚ùå Pipeline –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏."
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        }
    }
}